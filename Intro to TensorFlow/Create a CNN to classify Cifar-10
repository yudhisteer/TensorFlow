{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"Create a CNN to classify Cifar-10","provenance":[{"file_id":"https://github.com/tinyMLx/colabs/blob/master/2-3-9-AssignmentQuestion.ipynb","timestamp":1604861322012}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"}},"cells":[{"cell_type":"markdown","metadata":{"id":"iiVBUpuHXEtw"},"source":["# Create a CNN to classify Cifar-10\n","\n","Learn about Cifar-10 here: https://www.cs.toronto.edu/~kriz/cifar.html\n","\n","In class you saw how to build a Convolutional Neural Network that classified Fashion MNIST. Take what you learned to build a CNN that recognizes the 10 classes of CIFAR. It will be a similar network, but there are some key differences you'll need to take into account.\n","\n","First, while MNIST were 28x28 monochome images (1 color channel), CIFAR are 32x32 color images (3 color channels).\n","\n","Second, MNIST images are simple, containing just the object, centered in the image, with no background. CIFAR ones can have the object with a background -- for example airplanes might have a cloudy sky behind them! As such you should expect your accuracy to be a bit lower. \n","\n","We start by setting up the problem for you."]},{"cell_type":"code","metadata":{"id":"6OQ_tVTaU3oo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1604860038376,"user_tz":-240,"elapsed":11815,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"69cabf5a-88dc-41eb-b8cd-50918672db69"},"source":["import tensorflow as tf\n","\n","from tensorflow.keras import datasets, layers, models\n","import matplotlib.pyplot as plt\n","\n","(train_images, train_labels), (test_images, test_labels) = datasets.cifar10.load_data()\n","\n","# Normalize pixel values to be between 0 and 1\n","train_images = train_images / 255.0\n","test_images = test_images / 255.0"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n","170500096/170498071 [==============================] - 6s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"LTWHV_CKGpQ1"},"source":["We then definte some of the model for you but leave most of it for you to fill in! \n","\n","*A hint: your model may want to learn some high level features and then classify them.*"]},{"cell_type":"code","metadata":{"id":"law2hNzdVA16"},"source":["FIRST_LAYER = tf.keras.layers.Conv2D(64, (3,3), activation='relu', input_shape=(32, 32, 3))\n","HIDDEN_LAYER_TYPE_1 = tf.keras.layers.MaxPooling2D(2, 2)\n","HIDDEN_LAYER_TYPE_2 = tf.keras.layers.Conv2D(64, (3,3), activation='relu')\n","HIDDEN_LAYER_TYPE_3 = tf.keras.layers.MaxPooling2D(2, 2)\n","HIDDEN_LAYER_TYPE_4 = tf.keras.layers.Flatten()\n","HIDDEN_LAYER_TYPE_5 = tf.keras.layers.Dense(20, activation='relu')\n","LAST_LAYER = tf.keras.layers.Dense(10, activation='softmax')\n","\n","model = models.Sequential([\n","       FIRST_LAYER,\n","       HIDDEN_LAYER_TYPE_1,\n","       HIDDEN_LAYER_TYPE_2,\n","       HIDDEN_LAYER_TYPE_3,\n","       HIDDEN_LAYER_TYPE_4,\n","       layers.Flatten(),\n","       HIDDEN_LAYER_TYPE_5,\n","       LAST_LAYER,\n","])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZUb3jbZSGpRG"},"source":["You then need to define loss function. And you can then train your model. Once training is done you'll see a plot of training and validation accuracy. You'll know you have a reasonable model with a reasonable loss funciton if your final training accuracy ends up in the 70s (or possibly higher).\n","\n","*A hint: your model may want to learn different categories.*"]},{"cell_type":"code","metadata":{"id":"Dxq2JU7dVIEX","colab":{"base_uri":"https://localhost:8080/","height":989},"executionInfo":{"status":"ok","timestamp":1604860384611,"user_tz":-240,"elapsed":112979,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"fadced56-6bb4-4f58-d395-4d6be22ab63b"},"source":["LOSS = 'sparse_categorical_crossentropy'\n","NUM_EPOCHS = 20 #You can change this value if you like to experiment with it to get better accuracy\n","\n","# Compile the model\n","model.compile(optimizer='sgd',\n","              loss=LOSS,\n","              metrics=['accuracy'])\n","\n","# Fit the model\n","history = model.fit(train_images, train_labels, epochs=NUM_EPOCHS, \n","                    validation_data=(test_images, test_labels))\n","\n","# summarize history for accuracy\n","plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])\n","plt.title('model accuracy')\n","plt.ylabel('accuracy')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper left')\n","plt.xlim([0,NUM_EPOCHS])\n","plt.ylim([0.4,1.0])\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/20\n","1563/1563 [==============================] - 6s 4ms/step - loss: 2.0515 - accuracy: 0.2480 - val_loss: 1.8240 - val_accuracy: 0.3276\n","Epoch 2/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.6501 - accuracy: 0.4058 - val_loss: 1.5496 - val_accuracy: 0.4305\n","Epoch 3/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.4706 - accuracy: 0.4710 - val_loss: 1.5019 - val_accuracy: 0.4712\n","Epoch 4/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.3708 - accuracy: 0.5122 - val_loss: 1.3385 - val_accuracy: 0.5152\n","Epoch 5/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.2916 - accuracy: 0.5434 - val_loss: 1.3353 - val_accuracy: 0.5152\n","Epoch 6/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.2255 - accuracy: 0.5672 - val_loss: 1.3608 - val_accuracy: 0.5279\n","Epoch 7/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.1652 - accuracy: 0.5912 - val_loss: 1.1921 - val_accuracy: 0.5744\n","Epoch 8/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.1123 - accuracy: 0.6099 - val_loss: 1.1473 - val_accuracy: 0.5942\n","Epoch 9/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.0644 - accuracy: 0.6282 - val_loss: 1.1001 - val_accuracy: 0.6103\n","Epoch 10/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 1.0265 - accuracy: 0.6431 - val_loss: 1.3269 - val_accuracy: 0.5404\n","Epoch 11/20\n","1563/1563 [==============================] - 6s 4ms/step - loss: 0.9904 - accuracy: 0.6551 - val_loss: 1.0740 - val_accuracy: 0.6269\n","Epoch 12/20\n","1563/1563 [==============================] - 6s 4ms/step - loss: 0.9594 - accuracy: 0.6680 - val_loss: 1.0478 - val_accuracy: 0.6376\n","Epoch 13/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.9354 - accuracy: 0.6769 - val_loss: 1.1085 - val_accuracy: 0.6165\n","Epoch 14/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.9098 - accuracy: 0.6842 - val_loss: 1.0414 - val_accuracy: 0.6404\n","Epoch 15/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.8876 - accuracy: 0.6940 - val_loss: 1.0097 - val_accuracy: 0.6465\n","Epoch 16/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.8669 - accuracy: 0.7012 - val_loss: 0.9847 - val_accuracy: 0.6637\n","Epoch 17/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.8484 - accuracy: 0.7075 - val_loss: 0.9569 - val_accuracy: 0.6693\n","Epoch 18/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.8284 - accuracy: 0.7149 - val_loss: 0.9965 - val_accuracy: 0.6591\n","Epoch 19/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.8095 - accuracy: 0.7195 - val_loss: 0.9848 - val_accuracy: 0.6662\n","Epoch 20/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.7925 - accuracy: 0.7278 - val_loss: 0.9713 - val_accuracy: 0.6678\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"eKHKM9vKGpRV"},"source":["Finally, pick a better optimizer. And re-train your model. You'll know you have a reasonable model with a reasonable loss funciton and optimizer if your final training accuracy ends up in the 80s (or possibly higher).\n","\n","*A hint: your model may want to learn adaptively.*"]},{"cell_type":"code","metadata":{"id":"zU5FUImLGpRY","colab":{"base_uri":"https://localhost:8080/","height":989},"executionInfo":{"status":"ok","timestamp":1604860505791,"user_tz":-240,"elapsed":107652,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"aff57979-8edb-4008-f7de-2669ff16c81e"},"source":["OPTIMIZER = 'adam' #chnages its learning rate\n","\n","# Compile the model\n","model.compile(optimizer=OPTIMIZER,\n","              loss=LOSS,\n","              metrics=['accuracy'])\n","\n","# Fit the model\n","history = model.fit(train_images, train_labels, epochs=NUM_EPOCHS, \n","                    validation_data=(test_images, test_labels))\n","\n","# summarize history for accuracy\n","plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])\n","plt.title('model accuracy')\n","plt.ylabel('accuracy')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper left')\n","plt.xlim([0,NUM_EPOCHS])\n","plt.ylim([0.4,1.0])\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.9094 - accuracy: 0.6848 - val_loss: 0.9595 - val_accuracy: 0.6732\n","Epoch 2/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.8406 - accuracy: 0.7080 - val_loss: 0.9354 - val_accuracy: 0.6838\n","Epoch 3/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.7707 - accuracy: 0.7330 - val_loss: 0.9617 - val_accuracy: 0.6689\n","Epoch 4/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.7171 - accuracy: 0.7512 - val_loss: 0.9078 - val_accuracy: 0.6908\n","Epoch 5/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.6681 - accuracy: 0.7680 - val_loss: 0.9006 - val_accuracy: 0.6956\n","Epoch 6/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.6283 - accuracy: 0.7833 - val_loss: 0.9196 - val_accuracy: 0.6963\n","Epoch 7/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.5914 - accuracy: 0.7939 - val_loss: 0.9376 - val_accuracy: 0.7000\n","Epoch 8/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.5588 - accuracy: 0.8033 - val_loss: 0.9672 - val_accuracy: 0.6945\n","Epoch 9/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.5250 - accuracy: 0.8159 - val_loss: 0.9754 - val_accuracy: 0.6951\n","Epoch 10/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.5004 - accuracy: 0.8233 - val_loss: 0.9649 - val_accuracy: 0.7073\n","Epoch 11/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.4750 - accuracy: 0.8329 - val_loss: 1.0170 - val_accuracy: 0.6970\n","Epoch 12/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.4538 - accuracy: 0.8395 - val_loss: 1.1107 - val_accuracy: 0.6749\n","Epoch 13/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.4277 - accuracy: 0.8489 - val_loss: 1.0484 - val_accuracy: 0.7072\n","Epoch 14/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.4078 - accuracy: 0.8547 - val_loss: 1.0938 - val_accuracy: 0.6967\n","Epoch 15/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.3856 - accuracy: 0.8633 - val_loss: 1.1651 - val_accuracy: 0.6891\n","Epoch 16/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.3688 - accuracy: 0.8696 - val_loss: 1.1627 - val_accuracy: 0.6929\n","Epoch 17/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.3574 - accuracy: 0.8750 - val_loss: 1.2252 - val_accuracy: 0.6927\n","Epoch 18/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.3371 - accuracy: 0.8794 - val_loss: 1.2374 - val_accuracy: 0.6913\n","Epoch 19/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.3199 - accuracy: 0.8856 - val_loss: 1.3107 - val_accuracy: 0.6840\n","Epoch 20/20\n","1563/1563 [==============================] - 5s 3ms/step - loss: 0.3073 - accuracy: 0.8895 - val_loss: 1.3432 - val_accuracy: 0.6841\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}